name: BUILD TERRAFORM CODE ON AWS
on:
  push:
    branches:
      - main
  pull_request:
    paths:
    - 'resources/**/.tf'
    - '.github/workflows/terraform.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_INPUT: 'FALSE'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Format
      id: fmt
      run: cd resources/aws && terraform fmt -check

    - name: Terraform Init
      id: init
      run: cd resources/aws && terraform init

    - name: Terraform Validate
      id: validate
      run: cd resources/aws && terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: cd resources/aws && terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: cd resources/aws && ls -alth && echo "something works" # cd resources/aws && terraform apply -auto-approve

